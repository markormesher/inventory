extends ../_shared/page-layout

block page-body
	- editUser = locals.editUser || {}
	- editId = editUser.id || undefined

	div.row: div.col-xs-12
		form.validate(action = '/users/edit/' + (editId || ''), method = 'post')
			div.x_panel
				div.x_title
					if editId
						h2 Edit User: #{editUser.displayName}
					else
						h2 Create User

					div.panel_toolbox.btn-group.btn-group-sm
						a.btn.btn-default(href = '/users')
							i.fa.fa-fw.fa-arrow-left
							| Cancel
						button.btn.btn-primary(type = 'submit')
							i.fa.fa-save
							| Save

					div.clearfix

				div.x_content
					div.row
						div.col-sm-12.col-md-6.form-group
							label(for = 'username') Username
							input#username.form-control(value = editUser.username || '', disabled = editUser.username, required = true)

						div.col-sm-12.col-md-6.form-group
							label(for = 'displayName') Display Name
							input#displayName.form-control(value = editUser.displayName || '', required = true)

					if !editId
						div.row
							div.col-sm-12.col-md-6.form-group
								label(for = 'newPassword1') New Password:
								input#newPassword1.form-control(type = 'password', minlength = 8)

							div.col-sm-12.col-md-6.form-group
								label(for = 'newPassword2') Repeat New Password:
								input#newPassword2.form-control(type = 'password', data-rule-equalTo = "#newPassword1")

					if user.hasPermission(PERMISSIONS.USERS.SET_PERMISSIONS) && editUser.username !== 'admin'
						div.row
							div.col-sm-12.form-group
								label Permissions:
								div.clearfix
								div.checkbox-set
									- lastPrefix = allPermissions[0].split('.')[0]
									for p in allPermissions
										- pChecked = editId ? editUser.hasPermission(p) : defaultPermissions.indexOf(p) >= 0
										- prefix = p.split('.')[0]
										if prefix !== lastPrefix
											div.clearfix
											- lastPrefix = prefix
										div.checkbox.col-xs-12.col-sm-6.col-md-4: label
											input(type = 'checkbox', name = 'permissions[]', value = p, checked = pChecked)
											span !{p.replace(/\./g, ' &raquo; ')}
